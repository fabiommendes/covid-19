image: ritproject/cli:docker
services:
  - docker:dind
variables:
  GIT_SUBMODULE_STRATEGY: recursive
stages:
  - test
  - update project images
  - update production images
  - deploy
before_script:
  - rit --log on_error config tunnel add repo https://github.com/altjohndev/fabiommendes-covid-19-tunnel --name tunnel
  - rit --log on_error config tunnel default set tunnel

# Stage: test

test:
  stage: test
  variables:
    BUILD_TYPE: recursive
  script:
    - rit --log on_error tunnel --input disabled run calculator development build
    - rit --log on_error tunnel --input disabled run calculator development test up
    - rit --log on_error tunnel --input disabled run calculator development test sync
    - rit --log on_error tunnel --input disabled run calculator development test all
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /--skip-test/
  tags:
    - docker

# Stage: update project images

.update_project_image: &update_project_image
  stage: update project images
  script:
    - rit --log on_error tunnel --input disabled run images python build
    - rit --log on_error tunnel --input disabled run calculator $IMAGE_TAG build
    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - rit --log on_error tunnel --input disabled run images python push
    - rit --log on_error tunnel --input disabled run calculator $IMAGE_TAG push
  tags:
    - docker

update development project image:
  <<: *update_project_image
  variables:
    IMAGE_TAG: development
  only:
    - /^development$/

update production project image:
  <<: *update_project_image
  variables:
    IMAGE_TAG: production
  only:
    - /^production$/

# Stage: update production images

.update_production_image: &update_production_image
  stage: update production images
  script:
    - rit --log on_error tunnel --input disabled run calculator production build
    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - rit --log on_error tunnel --input disabled run calculator production push
  tags:
    - docker

update staging image:
  <<: *update_production_image
  variables:
    BUILD_TYPE: recursive
    IMAGE_TAG: staging
  only:
    - /^staging$/

update latest image:
  <<: *update_production_image
  variables:
    BUILD_TYPE: recursive
    IMAGE_TAG: latest
  only:
    - /^latest$/

# Deploy

.deploy: &deploy
  stage: deploy
  script:
    - rit --log on_error tunnel --input disabled run calculator production deploy up
    - rit --log on_error tunnel --input disabled run calculator production deploy sync
    - rit --log on_error tunnel --input disabled run calculator production deploy playbook
  tags:
    - docker

deploy staging:
  <<: *deploy
  environment:
    name: staging
  only:
    - /^staging$/

deploy production:
  <<: *deploy
  environment:
    name: production
  only:
    - /^latest$/
